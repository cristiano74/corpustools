% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/documentation_overview.r
\name{tCorpus_data}
\alias{tCorpus_data}
\title{Methods for viewing, modifying and subsetting tCorpus data}
\description{
\link[=tCorpus]{(back to overview)}
}
\details{
\strong{Get data}
\tabular{ll}{
  \link[=tCorpus$data]{$data} \tab Access the token data (in \link{data.table} format). Can also be used to modify data using regular assignment, but with some restrictions (see Modify data section) \cr
  \link[=tCorpus$meta]{$meta} \tab Access the document meta data \cr
  \link[=tCorpus$get]{$get()} \tab Get specific columns (faster and more efficient than $data, which first copies the whole data.table)  \cr
  \link[=tCorpus$get]{$get_meta()} \tab Get specific meta data columns  \cr
  \link[=tCorpus$dtm]{$dtm()} \tab Create a document term matrix \cr
  \link[=tCorpus$feature_index]{$feature_index()} \tab Create or load a feature index. Used for fast lookup of features. \cr
  \link[=tCorpus$context]{$context()} \tab Get a context vector. Currently supports documents or globally unique sentences.
}

\strong{Modify}

There are several ways to modify the data and meta data in tCorpus.
The less efficient but more classic approach is to directly assign to the $data and $meta, which can be used as regular data.tables (though note that assignment by reference is not possible)
The fastest and most memory efficient way is to use the set_* and delete_* methods, which support modify by reference (see documentation for \link[=tCorpus_modify_by_reference]{modifying by reference}).

\tabular{ll}{
  \link[=tCorpus$set]{$set()} \tab Modify the token data by setting the values of one (existing or new) column. Modifies by reference if always_copy is set to FALSE \cr
  \link[=tCorpus$set]{$set_meta()} \tab The set method for the document meta data \cr
  \link[=tCorpus$set_levels]{$set_levels()} \tab Change the levels of factor columns. Modifies by reference if always_copy is set to FALSE \cr
  \link[=tCorpus$set_meta_levels]{$set_meta_levels()} \tab Change the levels of factor columns in the meta data \cr
  \link[=tCorpus$set_colname]{$set_colname()} \tab Modify column names of token data. Modifies by reference if always_copy is set to FALSE  \cr
  \link[=tCorpus$set_meta_colname]{$set_meta_colname()} \tab Delete columns in the meta data \cr
  \link[=tCorpus$delete_columns]{$delete_columns()} \tab Delete columns. Modifies by reference if always_copy is set to FALSE  \cr
  \link[=tCorpus$delete_meta_columns]{$delete_meta_columns()} \tab Delete columns in the meta data
}

Modifying is restricted in certain ways to ensure that the data always meets the assumptions required for tCorpus methods.
tCorpus automatically tests whether assumptions are violated, so you don't have to think about this yourself.
The most important limitations are that you cannot subset or append the data.
For this, you can use the subset and append methods, or merge tCorpora together.

\strong{Subsetting, merging/adding}
\tabular{ll}{
  \link[=tCorpus$subset]{$subset()} \tab Modify the token and/or meta data using the \link{subset.tCorpus} function. A subset expression can be specified for both the token data (subset) and the document meta data (subset_meta). \cr
  \link[=tCorpus$subset]{$subset_meta()} \tab For consistency with other *_meta methods \cr
  \link[=tCorpus$subset_query]{$subset_query()} \tab Subset the tCorpus based on a query, as used in \link[=tCorpus$search_contexts]{$search_contexts}
}

\strong{Fields}

For the sake of convenience, the number of rows and column names of the data and meta data.tables can be accessed directly. This is also faster and more memory efficient than using nrows() and colnames() on the data and meta fields, because those have to copy the data.tables.

\tabular{ll}{
  $n \tab The number of tokens (i.e. rows in the data) \cr
  $n_meta \tab The number of documents (i.e. rows in the document meta data) \cr
  $names \tab The names of the token data columns \cr
  $names_meta \tab The names of the document meta data columns
}

\strong{Check and clean}
\tabular{ll}{
  \link[=tCorpus$feature_index]{$reset_feature_index()} \tab Reset the feature index. (free up memory) \cr
  $set_keys() \tab Check and (re)set the data.table keys. Should not be necessary, but pointed out here till certain. \cr
  $droplevels() \tab Drop the unused factor levels in the token and meta data.
}
}
