% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/documentation_methods.r
\name{tCorpus$feature_index}
\alias{tCorpus$feature_index}
\alias{feature_index.tCorpus}
\alias{tCorpus$reset_feature_index}
\alias{reset_feature_index.tCorpus}
\title{Create or extract a feature index}
\arguments{
\item{feature}{The feature to be indexed.}

\item{context_level}{Select whether the context is document or sentence level. In the feature_index, this determines the global_i gaps.}

\item{max_window_size}{Determines the size of the global_i gaps between concepts. If lower than 100, a window size of 100 is still used (you may consider this a very strong recommendation).}

\item{as_ascii}{use the ascii version of the feature. Use with care (i.e. make sure to also use ascii when looking up features)}
}
\description{
The feature index is a data.table with three columns: feature, i and global_i. The feature column is the data.table key, to enable fast lookup. The i column contains the indices of the feature in the token data.
The global_i represents the global positions of features, with gaps of a certain window_size between contexts (documents or sentences). This offers an efficient way to work with token windows. For example, if we want all tokens within a token window of 10, and the window_size is at least 10, then tokens from 2 different contexts can never occur in the same window.

Once a feature_index is created, it is stored within the tCorpus. Then, if the tCorpus$feature_index method is called again, it will first be checked whether the existing feature_index can be used or whether a new one has to be created. The existing feature_index can be used if the parameters are the same, and the max_window_size is equal or lower to the max_window_size of the existing tCorpus. (Note: max_window_size will always be set to at least 100, which should be sufficient for most appliations. While technically max_window_size can be much higher, this can lead to very high integers, to the point where it can slow down or yields overflow errors)

You can manually delete the feature_index that is stored in the tCorpus with the tCorpus$reset_feature_index() method.
}
\section{Usage}{

## R6 method for class tCorpus. Use as tc$method (where tc is a tCorpus object).

\preformatted{feature_index(feature = 'token', context_level = 'document', max_window_size = 100, as_ascii=F)}
\preformatted{reset_feature_index()}
}

